steps:
  - id: Generate Git Diff
    name: gcr.io/cloud-builders/git
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        git fetch origin
        git diff origin/main --output /workspace/diff.txt
        cat /workspace/diff.txt

  - id: Get the PR ID (GITHUB)
    name: 'gcr.io/just-ratio-467615-s1/friendly-cicd-helper:latest'
    entrypoint: sh
    args:
    - -c
    - |
      PULL_REQUEST_IID=$$(friendly-cicd-helper github-latest-pr --repo $_GITHUB_PROJECT --source $_HEAD_BRANCH)
      echo "$$PULL_REQUEST_IID" > /workspace/github_pull_request_iid
    secretEnv: ['GITHUB_TOKEN']

  - id: Using Vertex AI to provide an automated PR Review (GITHUB)
    name: 'gcr.io/just-ratio-467615-s1/friendly-cicd-helper:latest'
    entrypoint: sh
    args:
    - -c
    - |
      export VERTEX_GCP_PROJECT=$PROJECT_ID
      echo "## Automated Pull Request Review Notes (generated by Vertex AI)" | tee pullrequest-review.md
      echo "_Note that the following notes do not replace a thorough code review by an expert:_" | tee -a pullrequest-review.md

      friendly-cicd-helper vertex-code-review --diff /workspace/diff.txt | tee -a pullrequest-review.md

      cat pullrequest-review.md | friendly-cicd-helper github-pr-comment --repo $_GITHUB_PROJECT --pr $$(cat /workspace/github_pull_request_iid)
    secretEnv: ['GITHUB_TOKEN']

  - id: Using Vertex AI to provide automated Release Notes (GITHUB)
    name: 'gcr.io/just-ratio-467615-s1/friendly-cicd-helper:latest'
    entrypoint: sh
    args:
    - -c
    - |
      export VERTEX_GCP_PROJECT=$PROJECT_ID
      echo "## Automated Suggestions for Release Notes (generated by Vertex AI)" | tee pullrequest-release-notes.md

      friendly-cicd-helper vertex-release-notes --diff /workspace/diff.txt | tee -a pullrequest-release-notes.md

      cat pullrequest-release-notes.md | friendly-cicd-helper github-pr-comment --repo $_GITHUB_PROJECT --pr $$(cat /workspace/github_pull_request_iid)
    secretEnv: ['GITHUB_TOKEN']
  # - id: Build the image with Skaffold
  #   name: gcr.io/k8s-skaffold/skaffold
  #   entrypoint: /bin/bash
  #   args:
  #     - -c
  #     - |
  #       skaffold build --interactive=false --file-output=/workspace/artifacts.json --default-repo=$_REPO
  # - id: Create a release in Cloud Deploy and rollout to staging
  #   name: gcr.io/cloud-builders/gcloud
  #   entrypoint: 'bash'
  #   args:
  #     - '-c'
  #     - |
  #       MERGE_REQUEST_IID=$$(cat /workspace/gitlab_merge_request_iid)
  #       gcloud deploy releases create ledgerwriter-${SHORT_SHA} --delivery-pipeline genai-sw-delivery \
  #         --region europe-west1 --annotations "commitId=${REVISION_ID},gitlab_mr=$$MERGE_REQUEST_IID" --build-artifacts /workspace/artifacts.json
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/GITHUB_TOKEN/versions/3
    env: 'GITHUB_TOKEN'
options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _GITLAB_PROJECT: cris-ravl-group/fintech-cloud-suite
  _GITHUB_PROJECT: cristian-conte/friendly-cicd-helper
