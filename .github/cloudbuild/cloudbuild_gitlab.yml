steps:
  - id: Generate Git Diff
    name: gcr.io/cloud-builders/git
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        git fetch origin
        git diff origin/main --output /workspace/diff.txt
        cat /workspace/diff.txt

  - id: Get the MR ID
    name: 'gcr.io/just-ratio-467615-s1/friendly-cicd-helper:latest'
    entrypoint: sh
    args:
    - -c
    - |
      MERGE_REQUEST_IID=$$(friendly-cicd-helper gitlab-mergerequest --project $_GITLAB_PROJECT --source $_HEAD_BRANCH)
      echo "$$MERGE_REQUEST_IID" > /workspace/gitlab_merge_request_iid
    secretEnv: ['GITLAB_TOKEN']

  - id: Using Vertex AI to provide an automated MR Review
    name: 'gcr.io/just-ratio-467615-s1/friendly-cicd-helper:latest'
    entrypoint: sh
    args:
    - -c
    - |
      export VERTEX_GCP_PROJECT=$PROJECT_ID
      echo "## Automated Merge Request Review Notes (generated by Vertex AI)" | tee mergerequest-review.md
      echo "_Note that the following notes do not replace a thorough code review by an expert:_" | tee -a mergerequest-review.md

      friendly-cicd-helper vertex-code-review --diff /workspace/diff.txt | tee -a mergerequest-review.md

      cat mergerequest-review.md | friendly-cicd-helper gitlab-comment --project $_GITLAB_PROJECT --mergerequest $$(cat /workspace/gitlab_merge_request_iid)
    secretEnv: ['GITLAB_TOKEN']

  - id: Using Vertex AI to provide automated Release Notes
    name: 'gcr.io/just-ratio-467615-s1/friendly-cicd-helper:latest'
    entrypoint: sh
    args:
    - -c
    - |
      export VERTEX_GCP_PROJECT=$PROJECT_ID
      echo "## Automated Suggestions for Release Notes (generated by Vertex AI)" | tee mergerequest-release-notes.md

      friendly-cicd-helper vertex-release-notes --diff /workspace/diff.txt | tee -a mergerequest-release-notes.md

      cat mergerequest-release-notes.md | friendly-cicd-helper gitlab-comment --project $_GITLAB_PROJECT --mergerequest $$(cat /workspace/gitlab_merge_request_iid)
    secretEnv: ['GITLAB_TOKEN']

  - id: Security Scan (GITLAB)
    name: 'gcr.io/just-ratio-467615-s1/friendly-cicd-helper:latest'
    entrypoint: sh
    args:
    - -c
    - |
      echo "## ðŸ”’ Automated Security Scan Results" | tee security-scan.md
      echo "_Security analysis performed using industry-standard tools: Bandit, Safety, and Semgrep_" | tee -a security-scan.md
      echo "" | tee -a security-scan.md
      
      # Run security scan with text format for readability
      friendly-cicd-helper security-scan --diff /workspace/diff.txt --format text | tee -a security-scan.md
      
      # Also generate JSON output for potential further processing
      friendly-cicd-helper security-scan --diff /workspace/diff.txt --format json --output /workspace/security-report.json
      
      # Post the markdown results as a comment
      cat security-scan.md | friendly-cicd-helper gitlab-comment --project $_GITLAB_PROJECT --mergerequest $$(cat /workspace/gitlab_merge_request_iid)
    secretEnv: ['GITLAB_TOKEN']

  - id: Test Intelligence Analysis (GITLAB)
    name: 'gcr.io/just-ratio-467615-s1/friendly-cicd-helper:latest'
    entrypoint: sh
    args:
    - -c
    - |
      echo "## ðŸ§ª Test Intelligence Analysis" | tee test-intelligence.md
      echo "_Automated test analysis using coverage.py, pytest, and AI-powered insights_" | tee -a test-intelligence.md
      echo "" | tee -a test-intelligence.md
      
      # Run test intelligence analysis with AI suggestions
      friendly-cicd-helper test-intelligence --diff /workspace/diff.txt --format text --generate-tests --coverage-threshold 80 | tee -a test-intelligence.md
      
      # Also generate JSON output for potential further processing
      friendly-cicd-helper test-intelligence --diff /workspace/diff.txt --format json --output /workspace/test-intelligence-report.json
      
      # Post the markdown results as a comment
      cat test-intelligence.md | friendly-cicd-helper gitlab-comment --project $_GITLAB_PROJECT --mergerequest $$(cat /workspace/gitlab_merge_request_iid)
    secretEnv: ['GITLAB_TOKEN']

  # - id: Build the image with Skaffold
  #   name: gcr.io/k8s-skaffold/skaffold
  #   entrypoint: /bin/bash
  #   args:
  #     - -c
  #     - |
  #       skaffold build --interactive=false --file-output=/workspace/artifacts.json --default-repo=$_REPO
  # - id: Create a release in Cloud Deploy and rollout to staging
  #   name: gcr.io/cloud-builders/gcloud
  #   entrypoint: 'bash'
  #   args:
  #     - '-c'
  #     - |
  #       MERGE_REQUEST_IID=$$(cat /workspace/gitlab_merge_request_iid)
  #       gcloud deploy releases create ledgerwriter-${SHORT_SHA} --delivery-pipeline genai-sw-delivery \
  #         --region europe-west1 --annotations "commitId=${REVISION_ID},gitlab_mr=$$MERGE_REQUEST_IID" --build-artifacts /workspace/artifacts.json
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/friendly-cicd-helper_gitlab/versions/1
    env: 'GITLAB_TOKEN'
options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _GITLAB_PROJECT: cris-ravl-group/fintech-cloud-suite
  _GITHUB_PROJECT: cristian-conte/friendly-cicd-helper
